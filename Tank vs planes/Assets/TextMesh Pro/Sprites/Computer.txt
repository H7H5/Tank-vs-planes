Define CharMapFrom ( ' ' );
Define CharMapTo ( ' ' );
SetCharMap CharMapFrom CharMapTo;

Define CharList0
 ( 'À', 'Á', 'Â', 'Ã', 'Ä', 'Å', 'Æ', 'Ç', 'È', 'É', 'Ê', 'Ë', 'Ì', 'Í', 'Î', 'Ï'
   'Ð', ' ', '!', 'Ñ', '"', 'Ò', '#', 'Ó', '$', 'Ô', '%', 'Õ', '&', 'Ö', "'", '×'
   '(', 'Ø', ')', 'Ù', '*', 'Ú', '+', 'Û', ',', 'Ü', '-', 'Ý', '.', 'Þ', '/', 'ß'
   '0', 'à', '1', 'á', '2', 'â', '3', 'ã', '4', 'ä', '5', 'å', '6', 'æ', '7', 'ç'
   '8', 'è', '9', 'é', ':', 'ê', ';', 'ë', '<', 'ì', '=', 'í', '>', 'î', '?', 'ï'
   '@', 'ð', 'A', 'ñ', 'B', 'ò', 'C', 'ó', 'D', 'ô', 'E', 'õ', 'F', 'ö', 'G', '÷'
   'H', 'ø', 'I', 'ù', 'J', 'ú', 'K', 'û', 'L', 'ü', 'M', 'ý', 'N', 'þ', 'O', 'ÿ'
   'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '[', '\\', ']', '^', '_'
   '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o'
   'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '{', '|', '}' );

Define WidthList0
 (   9,   8,   8,   6,  10,   6,  14,   7,  10,  10,   8,  10,  12,  10,  10,  10
     7,   3,   4,   8,   5,   6,   8,   7,   7,  11,  11,   8,  10,  10,   3,   8
     3,  14,   3,  15,   5,  10,   9,  11,   3,   8,   5,   8,   3,  13,   6,   7
     8,   7,   5,   8,   8,   7,   8,   6,   8,   8,   8,   7,   8,  11,   7,   6
     8,   8,   8,   8,   3,   7,   3,   8,   9,  10,   9,   8,   9,   8,   6,   8
    12,   8,   9,   6,   8,   6,   8,   6,   9,  12,   6,   6,   6,   8,  10,   7
    10,  11,   3,  12,   5,   8,   8,   9,   5,   6,  12,   6,  10,  11,  10,   7
     7,  10,   7,   7,   6,  10,   8,  12,   8,   7,   8,   3,   6,   3,   9,   7
     3,   7,   8,   6,   8,   7,   3,   8,   8,   3,   3,   6,   3,  12,   8,   8
     8,   8,   4,   6,   3,   8,   6,  11,   6,   6,   6,   3,   3,   3 );

Define RectList0
 ( (252, 168, 28, 28), (280, 168, 28, 28), (308, 168, 28, 28), (336, 168, 28, 28)
   (364, 168, 28, 28), (  0, 196, 28, 28), ( 28, 196, 28, 28), ( 56, 196, 28, 28)
   ( 84, 196, 28, 28), (112, 196, 28, 28), (140, 196, 28, 28), (168, 196, 28, 28)
   (196, 196, 28, 28), (224, 196, 28, 28), (252, 196, 28, 28), (280, 196, 28, 28)
   (308, 196, 28, 28), (  0,   0,  0,  0), (  0,   0, 28, 28), (336, 196, 28, 28)
   ( 28,   0, 28, 28), (364, 196, 28, 28), ( 56,   0, 28, 28), (  0, 224, 28, 28)
   ( 84,   0, 28, 28), ( 28, 224, 28, 28), (112,   0, 28, 28), ( 56, 224, 28, 28)
   (140,   0, 28, 28), ( 84, 224, 28, 28), (168,   0, 28, 28), (112, 224, 28, 28)
   (196,   0, 28, 28), (140, 224, 28, 28), (224,   0, 28, 28), (168, 224, 28, 28)
   (252,   0, 28, 28), (196, 224, 28, 28), (280,   0, 28, 28), (224, 224, 28, 28)
   (308,   0, 28, 28), (252, 224, 28, 28), (336,   0, 28, 28), (280, 224, 28, 28)
   (364,   0, 28, 28), (308, 224, 28, 28), (  0,  28, 28, 28), (336, 224, 28, 28)
   ( 28,  28, 28, 28), (364, 224, 28, 28), ( 56,  28, 28, 28), (  0, 252, 28, 28)
   ( 84,  28, 28, 28), ( 28, 252, 28, 28), (112,  28, 28, 28), ( 56, 252, 28, 28)
   (140,  28, 28, 28), ( 84, 252, 28, 28), (168,  28, 28, 28), (112, 252, 28, 28)
   (196,  28, 28, 28), (140, 252, 28, 28), (224,  28, 28, 28), (168, 252, 28, 28)
   (252,  28, 28, 28), (196, 252, 28, 28), (280,  28, 28, 28), (224, 252, 28, 28)
   (308,  28, 28, 28), (252, 252, 28, 28), (336,  28, 28, 28), (280, 252, 28, 28)
   (364,  28, 28, 28), (308, 252, 28, 28), (  0,  56, 28, 28), (336, 252, 28, 28)
   ( 28,  56, 28, 28), (364, 252, 28, 28), ( 56,  56, 28, 28), (  0, 280, 28, 28)
   ( 84,  56, 28, 28), ( 28, 280, 28, 28), (112,  56, 28, 28), ( 56, 280, 28, 28)
   (140,  56, 28, 28), ( 84, 280, 28, 28), (168,  56, 28, 28), (112, 280, 28, 28)
   (196,  56, 28, 28), (140, 280, 28, 28), (224,  56, 28, 28), (168, 280, 28, 28)
   (252,  56, 28, 28), (196, 280, 28, 28), (280,  56, 28, 28), (224, 280, 28, 28)
   (308,  56, 28, 28), (252, 280, 28, 28), (336,  56, 28, 28), (280, 280, 28, 28)
   (364,  56, 28, 28), (308, 280, 28, 28), (  0,  84, 28, 28), (336, 280, 28, 28)
   ( 28,  84, 28, 28), (364, 280, 28, 28), ( 56,  84, 28, 28), (  0, 308, 28, 28)
   ( 84,  84, 28, 28), ( 28, 308, 28, 28), (112,  84, 28, 28), ( 56, 308, 28, 28)
   (140,  84, 28, 28), (168,  84, 28, 28), (196,  84, 28, 28), (224,  84, 28, 28)
   (252,  84, 28, 28), (280,  84, 28, 28), (308,  84, 28, 28), (336,  84, 28, 28)
   (364,  84, 28, 28), (  0, 112, 28, 28), ( 28, 112, 28, 28), ( 56, 112, 28, 28)
   ( 84, 112, 28, 28), (112, 112, 28, 28), (140, 112, 28, 28), (168, 112, 28, 28)
   (196, 112, 28, 28), (224, 112, 28, 28), (252, 112, 28, 28), (280, 112, 28, 28)
   (308, 112, 28, 28), (336, 112, 28, 28), (364, 112, 28, 28), (  0, 140, 28, 28)
   ( 28, 140, 28, 28), ( 56, 140, 28, 28), ( 84, 140, 28, 28), (112, 140, 28, 28)
   (140, 140, 28, 28), (168, 140, 28, 28), (196, 140, 28, 28), (224, 140, 28, 28)
   (252, 140, 28, 28), (280, 140, 28, 28), (308, 140, 28, 28), (336, 140, 28, 28)
   (364, 140, 28, 28), (  0, 168, 28, 28), ( 28, 168, 28, 28), ( 56, 168, 28, 28)
   ( 84, 168, 28, 28), (112, 168, 28, 28), (140, 168, 28, 28), (168, 168, 28, 28)
   (196, 168, 28, 28), (224, 168, 28, 28) );

Define OffsetList0
 ( (-9, -4), (-10, -4), (-10, -4), (-11, -4), (-9, -4), (-11, -4), (-7, -4), (-10, -4)
   (-9, -4), (-9, -4), (-10, -4), (-9, -4), (-8, -4), (-9, -4), (-9, -4), (-9, -4)
   (-10, -4), (0, 0), (-12, -4), (-10, -4), (-11, -4), (-11, -4), (-10, -4), (-10, -4)
   (-10, -4), (-8, -4), (-8, -4), (-10, -4), (-9, -4), (-9, -4), (-12, -4), (-10, -4)
   (-12, -4), (-7, -4), (-12, -4), (-6, -4), (-11, -4), (-9, -4), (-9, -4), (-8, -4)
   (-12, -4), (-10, -4), (-11, -4), (-10, -4), (-12, -4), (-7, -4), (-11, -4), (-10, -4)
   (-10, -4), (-10, -4), (-11, -4), (-10, -4), (-10, -4), (-10, -4), (-10, -4), (-11, -4)
   (-10, -4), (-10, -4), (-10, -4), (-10, -4), (-10, -4), (-8, -4), (-10, -4), (-11, -4)
   (-10, -4), (-10, -4), (-10, -4), (-10, -4), (-12, -4), (-10, -4), (-12, -4), (-10, -4)
   (-9, -4), (-9, -4), (-9, -4), (-10, -4), (-9, -4), (-10, -4), (-11, -4), (-10, -4)
   (-8, -4), (-10, -4), (-9, -4), (-11, -4), (-10, -4), (-11, -4), (-10, -4), (-11, -4)
   (-9, -4), (-8, -4), (-11, -4), (-11, -4), (-11, -4), (-10, -4), (-9, -4), (-10, -4)
   (-9, -4), (-8, -4), (-12, -4), (-8, -4), (-11, -4), (-10, -4), (-10, -4), (-9, -4)
   (-11, -4), (-11, -4), (-8, -4), (-11, -4), (-9, -4), (-8, -4), (-9, -4), (-10, -4)
   (-10, -4), (-9, -4), (-10, -4), (-10, -4), (-11, -4), (-9, -4), (-10, -4), (-8, -4)
   (-10, -4), (-10, -4), (-10, -4), (-12, -4), (-11, -4), (-12, -4), (-9, -4), (-10, -4)
   (-12, -4), (-10, -4), (-10, -4), (-11, -4), (-10, -4), (-10, -4), (-12, -4), (-10, -4)
   (-10, -4), (-12, -4), (-12, -4), (-11, -4), (-12, -4), (-8, -4), (-10, -4), (-10, -4)
   (-10, -4), (-10, -4), (-12, -4), (-11, -4), (-12, -4), (-10, -4), (-11, -4), (-8, -4)
   (-11, -4), (-11, -4), (-11, -4), (-12, -4), (-12, -4), (-12, -4) );

CreateLayer               Main;
LayerSetImage             Main 'Computer_layer0';
LayerSetBaseOrder         Main 0;
LayerSetAscent            Main 15;
LayerSetCharWidths        Main CharList0 WidthList0;
LayerSetImageMap          Main CharList0 RectList0;
LayerSetCharOffsets       Main CharList0 OffsetList0;
LayerSetLineSpacingOffset Main -11;
LayerSetPointSize         Main 11;

SetDefaultPointSize       11;
